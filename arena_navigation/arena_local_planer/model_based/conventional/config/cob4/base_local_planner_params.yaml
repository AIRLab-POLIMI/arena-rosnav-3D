TrajectoryPlannerROS:
  # Robot Configuration Parameters
  acc_lim_x: 2.5
  acc_lim_y: 2.5
  acc_lim_theta: 1.0

  max_vel_x: 1.1
  min_vel_x: 0.1

  # params are from https://github.com/ipa320/cob_navigation/tree/indigo_dev/cob_navigation_config/robots/cob4/nav/dwa_local_planner.yaml
  max_vel_x: 1.1 #default 0.3
  min_vel_x: -1.1 #default -0.3
  max_vel_theta: 0
  min_in_place_vel_theta: 0
  escape_vel: -0.09

  acc_lim_theta: 3.2
  acc_lim_x: 2.5
  acc_lim_y: 2.5

DWAPlannerROS:
  holonomic_robot: true
  escape_vel: -0.5

  acc_lim_x: 2.5
  acc_lim_y: 2.5
  acc_lim_th: 3.2
  max_vel_trans: 0.3
  min_vel_trans: 0.01
  max_vel_x: 1.1 #default 0.3
  min_vel_x: -1.1 #default -0.3
  max_vel_y: 0.2 #increase like max_x?
  min_vel_y: -0.2
  max_vel_theta: 0
  min_vel_theta: 0

  yaw_goal_tolerance: 0.17
  xy_goal_tolerance: 0.2 #0.10 # 10
  latch_xy_goal_tolerance: false

  sim_time: 1.7 #4.0 #2.0
  sim_granularity: 0.017 #0.25 #0.025
  vx_samples: 3 #20  #3
  vy_samples: 10
  vth_samples: 20 #40 #5
  controller_frequency: 5 #20.0  #5

  # Trajectory Scoring Parameters

  # cost =
  #  path_distance_bias * (distance to path from the endpoint of the trajectory in meters)
  #  + goal_distance_bias * (distance to local goal from the endpoint of the trajectory in meters)
  #  + occdist_scale * (maximum obstacle cost along the trajectory in obstacle cost (0-254))

  path_distance_bias: 24.0
  #    The weighting for how much the controller should stay close to the path it was given. default: 32.0
  goal_distance_bias: 32.0
  #    The weighting for how much the controller should attempt to reach its local goal, also controls speed. default: 24.0
  occdist_scale: 0.01
  #    The weighting for how much the controller should attempt to avoid obstacles. default 0.01
  forward_point_distance: 0.0
  #    The weighting for how much the controller should attempt to avoid obstacles. default: 0.325
  stop_time_buffer: 0.2
  #    The amount of time that the robot must stop before a collision in order for a trajectory to be considered valid in seconds. default 0.2
  scaling_speed: 0.25
  #    The absolute value of the velocity at which to start scaling the robot's footprint, in m/s.  default: 0.25
  max_scaling_factor: 0.2
  #    The maximum factor to scale the robot's footprint by. default: 0.2

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05
  #    How far the robot must travel in meters before oscillation flags are reset. default: 0.05
  oscillation_reset_angle: 0.1

  # Debugging
  publish_cost_grid: true
  #	Whether or not to publish the cost grid that the planner will use when planning. When true, a sensor_msgs/PointCloud2 will be available on the ~<name>/cost_cloud topic. Each point cloud represents the cost grid and has a field for each individual scoring function component as well as the overall cost for each cell, taking the scoring parameters into account.
  publish_cost_grid_pc: true

  #Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  escape_reset_dist: 0.1
  escape_reset_theta: 0.1
